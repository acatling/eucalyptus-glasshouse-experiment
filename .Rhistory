# maybe specifically number of neighbours too
# Composition maybe is already that but I need to make sure this reflects
#what was actually there
## ** do this
#### Transforming data to be normally distributed
alldata <- alldata %>% mutate(sqrt_RGR_overall = sqrt(RGR_overall))
### Pot 52 has two plants - AA - composition says AMYG-A, updating
alldata <- within(alldata, Composition[Pot_number==52] <- 'AA')
#Updated pot 33 to BBDD
alldata <- within(alldata, Composition[Pot_number==33] <- 'BBDD')
#pot 39 should be CD
alldata <- within(alldata, Composition[Pot_number==39] <- 'CD')
#Pot 84 should be just B
alldata <- within(alldata, Composition[Pot_number==84] <- 'OBLI-B')
#Pot 112 is all D
alldata <- within(alldata, Composition[Pot_number==112] <- 'DDDD')
#Pot 113 is all A
alldata <- within(alldata, Composition[Pot_number==113] <- 'AAAA')
#Pot 9 is all D
alldata <- within(alldata, Composition[Pot_number==9] <- 'DDDD')
#Pot 24 is all C
alldata <- within(alldata, Composition[Pot_number==24] <- 'CCCC')
### Pulling out control data only
controldata <- alldata %>% filter(C_or_D == 'C')
### Pulling out solo plants only
solodata <- alldata %>% filter(Composition =="AMYG-A" | Composition == "OBLI-B" | Composition =="OVAT-C" | Composition =="VIMI-D")
### Create dataset for each species
amygdata <- alldata %>% filter(Species=="AMYG")
oblidata <- alldata %>% filter(Species=="OBLI")
ovatdata <- alldata %>% filter(Species=="OVAT")
vimidata <- alldata %>% filter(Species=="VIMI")
#### Plotting distributions of continuous variables ####
hist(alldata$Height_2110)
hist(alldata$Height_1907)
hist(alldata$RGR_predrought)
hist(alldata$RGR_duringdrought)
hist(sqrt(alldata$RGR_overall))
hist(sqrt(controldata$RGR_overall))
#### Plotting basic trends ####
## Mortality ####
#Setting a seed makes sure the line matches the jittered point #seed =123. In theory....
alldatalong %>% filter(!(Species == '?')) %>%
ggplot(aes(x = date, y = percent_mortality, colour = plantid))+
geom_point(alpha=0.3, position = "jitter")+
# stat_smooth(geom="line", alpha = 0.3)+
#geom_smooth(formula = y ~ poly(x), alpha=0.3, se = FALSE)+
geom_line(stat="smooth", alpha = 0.3, position = "jitter")+
theme_classic()+
ylim(-15,115)+
theme(legend.position = 'none')+
facet_wrap(~Species)
## Coloured by watering treatment
alldatalong %>% filter(!(Species == '?')) %>%
ggplot(aes(x = date, y = percent_mortality, colour = C_or_D))+
geom_point(alpha=0.3, position = "jitter")+
# stat_smooth(geom="line", alpha = 0.3)+
#geom_smooth(formula = y ~ poly(x), alpha=0.3, se = FALSE)+
geom_line(stat="smooth", alpha = 0.3, position = "jitter")+
theme_classic()+
ylim(-15,115)+
facet_wrap(~Species)
## Growth rate ####
alldata %>% filter(!(Species == '?')) %>%
ggplot(aes(x = Species, y = RGR_duringdrought, colour = C_or_D))+
geom_boxplot()+
geom_jitter()+
theme_classic()
#14 days
alldata %>% filter(!(Species == '?')) %>%
ggplot(aes(x = Species, y = RGR_predrought))+
geom_boxplot()+
geom_jitter()+
theme_classic()
#14 days
alldata %>% filter(!(Species == '?')) %>%
ggplot(aes(x = Species, y = RGR_overall))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#RGR overall for well-watered plants only
alldata %>% filter(!(Species == '?')) %>% filter(C_or_D == 'C') %>%
ggplot(aes(x = Species, y = RGR_overall))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#For solo plants only
ggplot(solodata, aes(x = Species, y = sqrt(RGR_overall)))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#For solo well-watered plants only -- too few
solodata %>% filter(C_or_D == "C") %>%
ggplot(aes(x = Species, y = sqrt(RGR_overall)))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#Solo plants before drought? May be best
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#Has the same trend as solo well-watered plant, so I think solo plants before
#drought makes sense
#One-way ANOVA to see if there are differences in growth rate between species
modelgr1 <- aov(sqrt(RGR_predrought) ~ Species, solodata)
summary(modelgr1)
#No
TukeyHSD(modelgr1)
## Differences between species in time to mortality
alldata %>% filter(!Species=='?') %>%
ggplot(aes(x = Species, y = tt100m))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
alldata %>% filter(Species=='AMYG') %>% summarise(mean=mean(tt100m))
alldata %>% filter(!Species=='?') %>%
ggplot(aes(x = Species, y = tt50m))+
geom_boxplot()+
geom_jitter(alpha = 0.4, height=0.05)+
theme_classic()
#Removing unknown Species *check this latre
alldata <- alldata %>% filter(!Species=='?')
### Create dataset for each species
amygdata <- alldata %>% filter(Species=="AMYG")
oblidata <- alldata %>% filter(Species=="OBLI")
ovatdata <- alldata %>% filter(Species=="OVAT")
vimidata <- alldata %>% filter(Species=="VIMI")
ggplot(alldatalong, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
#geom_boxplot()+
theme_classic()+
facet_wrap(~Species)
ggplot(alldata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
#geom_boxplot()+
theme_classic()+
facet_wrap(~Species)
ggplot(alldata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
#eom_boxplot()+
theme_classic()+
facet_wrap(~Species)
ggplot(alldata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
geom_boxplot()+
theme_classic()+
facet_wrap(~Species)
ggplot(alldata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
geom_boxplot()+
theme_classic()+
theme(axis.title.x=rotate(90))
help(axis.title.x)
??axis.title.x
help(theme)
ggplot(alldata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
geom_boxplot()+
theme_classic()+
theme(axis.title.x='horizontal')
ggplot(alldata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
geom_boxplot()+
theme_classic()+
theme(axis.text.x=element_text(angle = 90))
ggplot(alldata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
geom_boxplot()+
theme_classic()+
theme(axis.text.x=element_text(angle = 90))+
facet_wrap(~Species)
ggplot(alldata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
geom_boxplot()+
theme_classic()+
theme(axis.text.x=element_text(angle = 90))+
facet_wrap(~Species)
test <- alldata %>% filter(Species=="AMYG" & Composition == "VIMI-D")
View(test)
view(mortalitydata)
view(heightdata)
ggplot(alldata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3)+
geom_boxplot()+
theme_classic()+
theme(axis.text.x=element_text(angle = 90))
ggplot(alldata, aes(x = Composition, y = tt100m, colour=Species))+
geom_jitter(alpha=0.3)+
geom_boxplot()+
theme_classic()+
theme(axis.text.x=element_text(angle = 90))
ggplot(alldata, aes(x = Composition, y = tt100m, colour=Species))+
geom_jitter(alpha=0.3, width=0.05)+
geom_boxplot()+
theme_classic()+
theme(axis.text.x=element_text(angle = 90))
ggplot(alldata, aes(x = Composition, y = tt100m, colour=Species))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)
ggplot(alldata, aes(x = Composition, y = tt100m, colour=Species))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
ggplot(alldata, aes(x = Composition, y = tt100m, colour=Species))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#drought plants only
alldata %>% filter(C_or_D=="D") %>%
ggplot(aes(x = Composition, y = tt100m, colour=Species))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#tt50m
ggplot(alldata, aes(x = Composition, y = tt50m, colour=Species))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
###Load in data from
source("preparing_data.R")
## Growth rate ####
alldata %>% filter(!(Species == '?')) %>%
ggplot(aes(x = Species, y = RGR_duringdrought, colour = C_or_D))+
geom_boxplot()+
geom_jitter()+
theme_classic()
#14 days
alldata %>% filter(!(Species == '?')) %>%
ggplot(aes(x = Species, y = RGR_predrought))+
geom_boxplot()+
geom_jitter()+
theme_classic()
## Growth rate ####
alldata %>% filter(!(Species == '?')) %>%
ggplot(aes(x = Species, y = RGR_duringdrought, colour = C_or_D))+
geom_boxplot()+
geom_jitter()+
theme_classic()
#14 days
alldata %>% filter(!(Species == '?')) %>%
ggplot(aes(x = Species, y = RGR_predrought))+
geom_boxplot()+
geom_jitter()+
theme_classic()
#14 days
alldata %>% filter(!(Species == '?')) %>%
ggplot(aes(x = Species, y = RGR_overall))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#RGR overall for well-watered plants only
alldata %>% filter(!(Species == '?')) %>% filter(C_or_D == 'C') %>%
ggplot(aes(x = Species, y = RGR_overall))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#For solo plants only
ggplot(solodata, aes(x = Species, y = sqrt(RGR_overall)))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#For solo well-watered plants only -- too few
solodata %>% filter(C_or_D == "C") %>%
ggplot(aes(x = Species, y = sqrt(RGR_overall)))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#Solo plants before drought? May be best
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_boxplot()+
geom_jitter(alpha = 0.4)+
theme_classic()
#Solo plants before drought? May be best
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_boxplot()+
geom_jitter(alpha = 0.4, width=0.05)+
theme_classic()
#For solo well-watered plants only -- too few
solodata %>% filter(C_or_D == "C") %>%
ggplot(aes(x = Species, y = sqrt(RGR_overall)))+
geom_boxplot()+
geom_jitter(alpha = 0.4, width=0.05)+
theme_classic()
#Solo plants before drought? May be best
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_boxplot()+
geom_jitter(alpha = 0.4, width=0.05)+
theme_classic()
ggplot(alldata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2, colour = "lightblue") +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_jitter(alpha=0.3, width=0.05, colour = "lightblue")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_jitter(alpha=0.8, width=0.05, colour = "lightblue")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_jitter(width=0.05, colour = "lightblue")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_jitter(alpha=0.8, width=0.05, colour = "forestgreen")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = sqrt(RGR_predrought)))+
geom_jitter(alpha=0.4, width=0.05, colour = "forestgreen")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#One-way ANOVA to see if there are differences in growth rate between species
modelgr1 <- aov(sqrt(RGR_predrought) ~ Species, solodata)
summary(modelgr1)
#No
TukeyHSD(modelgr1)
#growth rate
ggplot(solodata, aes(x = Species, y = RGR_predrought))+
geom_jitter(alpha=0.4, width=0.05, colour = "forestgreen")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
View(alldata)
915-500
415/14
30*14
#growth rate
ggplot(solodata, aes(x = Species, y = RGR_predrought))+
geom_jitter(alpha=0.4, width=0.05, colour = "forestgreen")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
ylab("RGR pre-drought (mm/day)")
#growth rate
ggplot(solodata, aes(x = Species, y = RGR_predrought))+
geom_jitter(alpha=0.4, width=0.05, colour = "forestgreen")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
ylab("RGR pre-drought (mm/day)")+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = RGR_predrought))+
geom_jitter(alpha=0.4, width=0.05, colour = "grey")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
ylab("RGR pre-drought (mm/day)")+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = RGR_predrought))+
geom_jitter(alpha=0.8, width=0.05, colour = "grey")+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
ylab("RGR pre-drought (mm/day)")+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = RGR_predrought))+
geom_jitter(alpha=0.8, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
ylab("RGR pre-drought (mm/day)")+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = RGR_predrought))+
geom_jitter(alpha=0.4, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
ylab("RGR pre-drought (mm/day)")+
theme_classic()
#growth rate
ggplot(solodata, aes(x = Species, y = RGR_predrought))+
geom_jitter(alpha=0.2, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
ylab("RGR pre-drought (mm/day)")+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3, width=0.05)+
#geom_point(stat="summary", fun.y="mean_se",size=2) +
#geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#drought plants only - pretty much the same
alldata %>% filter(C_or_D=="D") %>%
ggplot(aes(x = Composition, y = tt100m, colour=Species))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt50m))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt50m))+
geom_jitter(alpha=0.3, width=0.05)+
#geom_point(stat="summary", fun.y="mean_se",size=2) +
#geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#tt50m
ggplot(alldata, aes(x = Composition, y = tt50m, colour=Species))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#solo plants only
ggplot(solodata, aes(x = Composition, y = tt100m))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
#drought plants only - pretty much the same
alldata %>% filter(C_or_D=="D") %>%
ggplot(aes(x = Composition, y = tt100m, colour=Species))+
geom_jitter(alpha=0.3, width=0.05)+
geom_point(stat="summary", fun.y="mean_se",size=2) +
geom_errorbar(stat="summary", fun.data="mean_se",width=0,size=0.8)+
theme_classic()
View(oblidata)
samplesizes <- samplesizedata %>% group_by(Composition) %>% tally()
View(samplesizes)
test <- alldata %>% filter(is.na(Composition))
test <- alldata %>% group_by(Composition) %>% tally()
View(test)
test <- alldata %>% group_by(Composition) %>% filter(row_number()==1) %>% tally()
View(test)
test <- alldata %>% filter(row_number()==1)
test <- alldata %>% group_by(Pot_number) %>% filter(row_number()==1) %>% tally()
test <- alldata %>% group_by(Pot_number) %>% filter(row_number()==1)
test2 <- test %>% group_by(Composition) %>% tally()
View(test2)
##Updated sample sizes December 2022 ####
onerowpot <- alldata %>% group_by(Pot_number) %>% filter(row_number()==1)
samplesizestable <- onerowpot %>% group_by(Composition) %>% tally()
library(kableExtra)
View(samplesizestable)
